#!/bin/bash
###################################################################
# This script aims to deploy OpenERP to local system running with #
# Gunicorn as backend and Nginx as reverse proxy to serve the     #
# HTTP requests, and Supervisor to monitor Gunicorn process.      #
# This includes a basic config for nginx without load-balancing.  #
#                                                                 #
# This script will do the following:                              #
# * Create PostgreSQL user: openerp.                              #
# * Configure nginx and supervisor                                #
# * Configure WSGI script for Gunicorn                            #
###################################################################

if [[ $EUID -ne 0 ]]; then
    echo ""
    echo "Please run this script as root." 1>&2
    echo ""
    exit 1
fi

### Dialog Version of Deploy Script ###

# Check to see if 'dialog' is installed
if hash dialog 2>/dev/null; then
    true
else
    echo "Please install 'dialog' before you continue."
    echo "You can use 'sudo apt-get install dialog' under Ubuntu to install it."
    exit 1
fi

SCRIPT_DIR=`pwd`
TEMP=/tmp
DIALOGOPTS="--backtitle \"OpenERP Installation\" --max-input 255 --no-cancel --ok-label \"Confirm\""

dialog --title "Installing Prerequisites" \
       --yesno "Do you want to install prerequisite packages?\n\
                You can skip this step if you have already installed them."
       8 70
[ $? -eq 0 ] && $SCRIPT_DIR/install-prerequisites

dialog --title "OpenERP Source Directory" \
       --inputbox "Please enter the ABSOLUTE path of the OpenERP source directory.\n\
                   If empty, current working directory will be used."
       8 70 2> $TEMP/SRCDIR
SRCDIR=`cat $TEMP/SRCDIR`

[ -z $SRCDIR ] && SRCDIR=`pwd`
clear

GUNICORN_BIN=`which gunicorn`
GUNICONF=/etc/gunicorn.d
NGINXCONF=/etc/nginx
NGINXSITE=/etc/nginx/sites-available
SVCONF=/etc/supervisor/conf.d

SRC_AP=`readlink -f $SRCDIR`
SRC_DIRNAME=`echo $SRC_AP | awk '{gsub("/","\n");print};' | tail -n1`
MODSRC=`cat $SRC_AP/install-modules`

CPU_COUNT=`grep -i processor /proc/cpuinfo | wc -l`
WORKERS=`expr $CPU_COUNT + 1`

[ ! -f $SRC_AP/openerp-wsgi.py ] &&
echo ""
echo -e "$SRC_AP/openerp-wsgi.py not detected.\n" &&
echo -e "Please check your source directory." &&
exit 1

# Define installation path.
dialog --title "OpenERP Installation Path" \
       --inputbox "Please specify the path you wish to install OpenERP\n\
                   Default value is /var, if unspecified."
       8 70 2> $TEMP/INSTPATH
INSTPATH=`cat $TEMP/INSTPATH`

[ -z $INSTPATH ] && INSTPATH=/var
clear

while [ -z $DBUSER ]; do
dialog --title "OpenERP Database User" \
       --inputbox "Please enter the username for your database." \
       8 70 2> $TEMP/DBUSER
DBUSER=`cat $TEMP/DBUSER`
clear
done

while [ -z $DBPASS ]; do
dialog --title "Password For Database User" \
       --insecure
       --passwordbox "Please enter the password for database login role '$DBUSER'." \
       8 70 2> $TEMP/DBPASS
DBPASS=`cat $TEMP/DBPASS`
rm $TEMP/DBPASS
clear
done

dialog --title "System Domain Name" \
       --inputbox "Please enter the domain name for this machine.\n\
                   Default value is localhost, if unspecified."
       8 70 2> $TEMP/DOMNAME
DOMNAME=`cat $TEMP/DOMNAME`

[ -z $DOMNAME ] && DOMNAME=localhost
clear

USERDOC=$DBUSER\doc

sudo -u postgres createuser -d -E -R -s -l $DBUSER
sudo -u postgres createuser -D -E -R -S -l $USERDOC
sudo adduser --disabled-password --gecos "" $DBUSER

USERID=`id -u $DBUSER`

# Set database user password.
sudo -u postgres psql -q -c "ALTER ROLE $DBUSER WITH PASSWORD '$DBPASS';"
sudo -u postgres psql -q -c "ALTER ROLE $USERDOC WITH PASSWORD '$DBPASS';"

# Copy OpenERP source to INSTPATH
cp -r $SRC_AP $INSTPATH/
chown -R $DBUSER: $INSTPATH/$SRC_DIRNAME

# Create database and set privileges.
sudo -u openerp createdb $DBUSER
sudo -u openerp python $INSTPATH/$SRC_DIRNAME/openerp-server -d $DBUSER --stop-after-init --without-demo=all -i $MODSRC
sudo -u postgres psql -q -d $DBUSER -c "GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO $DBUSER;"
sudo -u postgres psql -q -d $DBUSER -c "GRANT SELECT ON ALL TABLES IN SCHEMA public TO $USERDOC;"

# Copy WSGI configuration file to Gunicorn config folder.
cp $SRC_AP/openerp-wsgi.py $GUNICONF

sed -i s\#addonpathhere\#$INSTPATH/$SRC_DIRNAME/openerp/addons\# $GUNICONF/openerp-wsgi.py
sed -i s\#dbuserhere\#$DBUSER\# $GUNICONF/openerp-wsgi.py
sed -i s\#dbpasshere\#$DBPASS\# $GUNICONF/openerp-wsgi.py
sed -i s\#workershere\#$WORKERS\# $GUNICONF/openerp-wsgi.py
sed -i s\#useridhere\#$USERID\# $GUNICONF/openerp-wsgi.py

# Configure Nginx using template config.
[ -f $NGINXCONF/nginx.conf ] && mv $NGINXCONF/nginx.conf $NGINXCONF/nginx.conf-backup
[ -f $NGINXSITE/openerp ] && mv $NGINXSITE/openerp $NGINXSITE/openerp-backup
rm $NGINXCONF/sites-enabled/*
cp $SRC_AP/nginx/nginx.conf $NGINXCONF/nginx.conf
cp $SRC_AP/nginx/openerp $NGINXSITE/openerp
ln -s $NGINXSITE/openerp $NGINXCONF/sites-enabled/openerp

sed -i s\#workercount\#$WORKERS\# $NGINXCONF/nginx.conf
sed -i s\#rootdirhere\#$INSTPATH/$SRC_DIRNAME\# $NGINXSITE/openerp
sed -i s\#domainhere\#$DOMNAME\# $NGINXSITE/openerp

service nginx stop
sleep 1
service nginx start

# Configure Supervisor using template config
cp $SRC_AP/supervisor/openerp.conf $SVCONF/
[ ! -d /var/log/openerp ] && mkdir /var/log/openerp && chmod 755 /var/log/openerp
sed -i s\#gunicorn_binary\#$GUNICORN_BIN\# $SVCONF/openerp.conf
sed -i s\#gunicorn_confdir\#$GUNICONF\# $SVCONF/openerp.conf
sed -i s\#openerp_dir\#$INSTPATH/$SRC_DIRNAME\# $SVCONF/openerp.conf

service supervisor stop
sleep 1
service supervisor start

# Print finish dialog
dialog --title "OpenERP Installation Successful"
       --ok-label "OK"
       --msgbox "OpenERP Installation has completed successfully.\n\
                 Please open your browser (preferably Chrome or Firefox)\n\
                 and access http://localhost/ to start using OpenERP."
       7 60
clear

exit 0
